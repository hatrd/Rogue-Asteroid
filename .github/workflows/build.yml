name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y zip unzip wget
    
    - name: Create .love package
      run: |
        mkdir -p dist
        # Exclude CI files, docs, and build scripts from the game package
        zip -r dist/rogue-asteroid.love . \
          -x "dist/*" ".git/*" ".github/*" "*.md" "build.sh" "download-love2d.sh" \
             "rogue-asteroid-source.zip" "CLAUDE.md" "LICENSE"
    
    - name: Download and prepare Love2D Windows
      run: |
        cd dist
        
        # Download Love2D Windows binaries
        wget -q https://github.com/love2d/love/releases/download/11.4/love-11.4-win64.zip
        unzip -q love-11.4-win64.zip
        mv love-11.4-win64 windows
        
        # Create Windows executable by concatenating
        cd windows
        cat love.exe ../rogue-asteroid.love > rogue-asteroid.exe
        rm love.exe  # Remove original to avoid confusion
        cd ..
        
        # Create Windows distribution zip
        zip -r rogue-asteroid-windows.zip windows/
        
        # Clean up
        rm -rf windows love-11.4-win64.zip
    
    - name: Download and prepare Love2D macOS
      run: |
        cd dist
        
        # Download Love2D macOS
        wget -q https://github.com/love2d/love/releases/download/11.4/love-11.4-macos.zip
        unzip -q love-11.4-macos.zip
        
        # Create macOS app bundle
        cp -r love.app "Rogue Asteroid.app"
        cp rogue-asteroid.love "Rogue Asteroid.app/Contents/Resources/"
        
        # Update Info.plist for custom app name
        sed -i 's/<string>L√ñVE<\/string>/<string>Rogue Asteroid<\/string>/g' "Rogue Asteroid.app/Contents/Info.plist" || true
        
        # Create macOS distribution zip
        zip -r rogue-asteroid-macos.zip "Rogue Asteroid.app"
        
        # Clean up
        rm -rf love.app "Rogue Asteroid.app" love-11.4-macos.zip
    
    - name: Create Linux AppImage
      run: |
        cd dist
        
        # Create Linux launcher script
        mkdir -p linux
        cat > linux/rogue-asteroid << 'EOF'
#!/bin/bash
DIR="$(dirname "$(readlink -f "$0")")"
if command -v love >/dev/null 2>&1; then
    love "$DIR/rogue-asteroid.love"
else
    echo "Love2D not found. Please install: sudo apt install love2d"
    exit 1
fi
EOF
        chmod +x linux/rogue-asteroid
        cp rogue-asteroid.love linux/
        
        # Create Linux distribution
        zip -r rogue-asteroid-linux.zip linux/
        
        # Clean up
        rm -rf linux
    
    - name: List generated files
      run: |
        echo "Generated distribution files:"
        ls -la dist/
    
    - name: Upload .love artifact
      uses: actions/upload-artifact@v4
      with:
        name: rogue-asteroid-love
        path: dist/rogue-asteroid.love
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: rogue-asteroid-windows
        path: dist/rogue-asteroid-windows.zip
    
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: rogue-asteroid-macos
        path: dist/rogue-asteroid-macos.zip
    
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: rogue-asteroid-linux
        path: dist/rogue-asteroid-linux.zip
    
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/rogue-asteroid.love
          dist/rogue-asteroid-windows.zip
          dist/rogue-asteroid-macos.zip
          dist/rogue-asteroid-linux.zip
        body: |
          # üöÄ Rogue Asteroid ${{ github.ref_name }}
          
          A fast-paced asteroid shooter with roguelike progression - **built entirely with [Claude Code](https://claude.ai/code)**! ü§ñ
          
          ## üì¶ Download Options
          
          | Platform | File | Description |
          |----------|------|-------------|
          | üåç **Universal** | `rogue-asteroid.love` | Works on any platform with Love2D installed |
          | ü™ü **Windows** | `rogue-asteroid-windows.zip` | Standalone executable, no installation required |
          | üçé **macOS** | `rogue-asteroid-macos.zip` | Native macOS app bundle |
          | üêß **Linux** | `rogue-asteroid-linux.zip` | Launcher script + game files |
          
          ## üéÆ Quick Start
          
          ### Windows
          1. Download `rogue-asteroid-windows.zip`
          2. Extract and run `rogue-asteroid.exe`
          
          ### macOS
          1. Download `rogue-asteroid-macos.zip`
          2. Extract and drag "Rogue Asteroid.app" to Applications
          
          ### Linux
          1. Install Love2D: `sudo apt install love2d`
          2. Download `rogue-asteroid-linux.zip`
          3. Extract and run `./rogue-asteroid`
          
          ### Universal (Any Platform)
          1. Install [Love2D](https://love2d.org/)
          2. Download `rogue-asteroid.love`
          3. Double-click or run `love rogue-asteroid.love`
          
          ## üéØ Controls
          - **WASD/Arrows**: Move and rotate
          - **Space/Mouse**: Shoot
          - **M**: Toggle sound
          
          ## ‚ú® Features
          - Roguelike progression with 5 upgrade paths
          - Procedural sound effects and particle systems
          - Wave-based gameplay with increasing difficulty
          - Enhanced graphics and smooth controls
          
          ---
          
          **ü§ñ This entire game was created using Claude Code** - showcasing the future of AI-assisted development!
          
          Learn more at [claude.ai/code](https://claude.ai/code)
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}